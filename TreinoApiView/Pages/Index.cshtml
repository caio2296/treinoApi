@page
@model TreinoSiteApi.Modulos.ModeloUsuarioClienteVerificacaoDto
@{
    ViewBag.Title = "Login";
    
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div class="row">

        @Html.ActionLink("treino", "Gets", "TreinoSiteApi")
        <section id="loginform">



            <form id="formulario"  action ="TreinoSiteApi/login" method="post"   > 
             <input type="text" name='Nome'> 
              <input type="password" name='Senha'> 
                  
              <button id="button" type="submit" onclick="Enviar()"> submit </button>
             @*<input value="Enviar" type="submit" onclick= "Enviar()">*@
            </form>


            @*@using (Html.BeginForm("Autenticar", "TreinoSiteApi", new { ReturnUrl = ViewBag.ReturnUrl },
             FormMethod.Post, null ,new { @class = "form.horizontal", role = "from" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
                <div class="cal-md 10">
                    @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Senha, new { @class = "col-md-2 control-label" })
                <div class="cal-md 10">
                    @Html.TextBoxFor(m => m.Senha, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Senha, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10  col-md-offset-2">
                    <input type="submit" class="btn btn-success" value="Entrar">

                </div>

            </div>


        }*@

        </section>
            </div>
                
                   
                        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
            </div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script language="javascript" type="text/javascript">

    function Enviar() {
        var form = $("#formulario");
        
        //var formulario = JSON.stringify($("#formulario").serializeArray());
        console.log($("#formulario"));
        //document.getElementsByClassName("#formulario").addEventListener("click", function (event) {
        //    event.preventDefault()
        //});
        alert($("#formulario").data);
        form.submit(function (e) {

            e.preventDefault();
            $.ajax({

                url: "https://localhost:44325/TreinoSiteApi/login",
                type: 'POST',
                data: JSON.stringify({
                    "Nome": "Caio",
                    "Senha": 13524678
                }),

                success: function (data) {
                    console.log("sucesso");
                    alert("Sucesso!");
                    console.log(data);
                },
                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                        console.log(jqXHR.responseText);
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        console.log(jqXHR.responseText);
                    }
                    alert(msg);
                },
                dataType: "json",
                contentType: "application/json"

            });

        });


        //var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
        //var theUrl = "https://localhost:44365/TreinoSiteApi/login";
        //xmlhttp.open("POST", theUrl);
        //xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        //xmlhttp.send(JSON.stringify({ "email": "hello@user.com", "response": { "name": "Tester" } }));

    }

</script>